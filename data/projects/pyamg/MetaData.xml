<?xml version="1.0" encoding="UTF-8"?>
<response>
  <status>success</status>
  <result>
    <project>
      <id>22716</id>
      <name>PyAMG</name>
      <url>http://www.ohloh.net/p/pyamg.xml</url>
      <html_url>http://www.ohloh.net/p/pyamg</html_url>
      <created_at>2008-10-07T15:01:14Z</created_at>
      <updated_at>2013-04-29T06:20:24Z</updated_at>
      <description>PyAMG is a library of Algebraic Multigrid (AMG) solvers with a convenient Python interface.   

AMG is a multilevel technique for solving large-scale linear systems with optimal or near-optimal efficiency.  Unlike geometric multigrid, AMG requires little or no geometric information about the underlying problem and develops a sequence of coarser grids directly from the input matrix.  This feature is especially important for problems discretized on unstructured meshes and irregular grids. 

PyAMG features implementations of several popular AMG methods: Ruge-Stuben (RS) or Classical AMG, AMG based on Smoothed Aggregation (SA), and Adaptive Smoothed Aggregation (aSA).</description>
      <homepage_url>http://code.google.com/p/pyamg</homepage_url>
      <download_url>http://code.google.com/p/pyamg/downloads/list</download_url>
      <url_name>pyamg</url_name>
      <medium_logo_url>no_logo.png</medium_logo_url>
      <small_logo_url>no_logo.png</small_logo_url>
      <user_count>3</user_count>
      <average_rating>5.0</average_rating>
      <rating_count>1</rating_count>
      <review_count>0</review_count>
      <analysis_id>13734344</analysis_id>
      <tags>
        <tag>pyamg</tag>
        <tag>numpy</tag>
        <tag>python</tag>
        <tag>algebraicmultigrid</tag>
        <tag>scipy</tag>
        <tag>multigrid</tag>
        <tag>amg</tag>
      </tags>
      <analysis>
        <id>13734344</id>
        <url>http://www.ohloh.net/analyses/13734344.xml</url>
        <project_id>22716</project_id>
        <updated_at>2013-04-29T06:20:24Z</updated_at>
        <logged_at>2013-04-29T06:20:03Z</logged_at>
        <min_month>2008-02-01T00:00:00Z</min_month>
        <max_month>2013-04-01T00:00:00Z</max_month>
        <twelve_month_contributor_count>2</twelve_month_contributor_count>
        <total_code_lines>49926</total_code_lines>
        <factoids>
          <factoid type="FactoidAgeVeryOld">
Mature, well-established codebase          </factoid>
          <factoid type="FactoidActivityIncreasing">
Increasing Y-O-Y development activity          </factoid>
          <factoid type="FactoidTeamSizeSmall">
Small development team          </factoid>
          <factoid type="FactoidCommentsLow">
Few source code comments          </factoid>
        </factoids>
        <languages graph_url="http://www.ohloh.net/p/pyamg/analyses/13734344/languages.png">
          <language color="F35F1F" percentage="63" id="44">
C++          </language>
          <language color="4A246B" percentage="34" id="9">
Python          </language>
          <language color="000000" percentage="3" id="">
6 Other          </language>
        </languages>
        <main_language_id>44</main_language_id>
        <main_language_name>C++</main_language_name>
      </analysis>
      <licenses>
        <license>
          <name>bsd</name>
          <nice_name>BSD 4-clause (University of California-Specific)</nice_name>
        </license>
      </licenses>
    </project>
  </result>
</response>
